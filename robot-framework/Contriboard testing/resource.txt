*** Settings ***
Library           ExtendedSelenium2Library
Library           Collections

*** Variables ***
${Browser}        firefox
${DELAY}          0.1
${ValidUser}      testbaboon@test.com
${ValidPassword}    t3stmonkey
${NewUser}        new@test.com
${NewPassword}    t3stmonkey
${SERVER}         localhost:8000
${MainUrl}        http://${SERVER}
${LoginUrl}       http://${SERVER}/login
${BoardUrl}       http://${SERVER}/boards
${RegUrl}         http://${SERVER}/register
${LoginTitle}     Contriboard

*** Keywords ***
Register User
    Assign Id To Element    //div[@class='view view-form']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Element Text Should Be    //button[@data-reactid='${rid}.1.0.3.1']    Register    Erronr=Register button missing
    Click Button    //button[@data-reactid='${rid}.1.0.3.1']
    Wait Until Page Contains Element    //div[@class='form']    timeout=2    error=Form not found
    Location Should Be    ${RegUrl}
    Assign Id To Element    //div[@class='view view-form']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Input Username    ${NewUser}
    Input User Password    ${NewPassword}
    Element Text Should Be    //button[@data-reactid='${rid}.1.0.2']    Register    Error=Register button missing
    Submit Credentials
    Wait Until Page Contains Element    //div[@class='form']    timeout=2    error=Form not found
    Location Should Be    ${LoginUrl}

Login New User
    Assign Id To Element    //div[@class='view view-form']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Wait Until Page Contains Element    //div[@class='form']    timeout=2    error=Form not found
    Input Username    ${NewUser}
    Input User Password    ${NewPassword}
    Element Text Should Be    //button[@data-reactid='${rid}.1.0.2']    Login    Error=Login button missing
    Submit Credentials
    Wait Until Page Contains Element    //div[@class='content']    timeout=2    error=Board list Not Found
    Location Should Be    ${BoardUrl}

Login User
    Assign Id To Element    //div[@class='view view-form']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Input Username    ${ValidUser}
    Input User Password    ${ValidPassword}
    Element Text Should Be    //button[@data-reactid='${rid}.1.0.2']    Login    Error=Login button missing
    Submit Credentials
    Wait Until Page Contains Element    //div[@class='content']    timeout=2    error=Board list Not Found
    Location Should Be    ${BoardUrl}

New Board
    Click Element    //span[@class='fa fa-fw fa-plus']

Edit Board
    Click Element    //span[@class='fa fa-fw fa-pencil']
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Input Text    //input[@placeholder='Board Name']    Typing board name
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Edit Board From Board
    Wait Until Page Contains Element    //div[@class='controls']    timeout=2    error=Controls Not Found
    Click Element    //span[@class='fa fa-fw fa-pencil']
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Input Text    //input[@placeholder='Board Name']    Typing new board name
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Set Board Background
    Click Element    //span[@class='fa fa-fw fa-pencil']
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Assign Id To Element    //div[@class='dialog-overlay']    Content
    ${rid}    Get Element Attribute    Content@data-reactid
    Get Random Background
    Select From List By Value    //select[@data-reactid='${rid}.0.1.4.2.0']    ${background}
    Run Keyword If    '${background}'=='NONE'    Empty Background
    Run Keyword Unless    '${background}'=='NONE'    Check Background

Empty Background
    Assign Id To Element    //div[@class='dialog-overlay']    Content
    ${rid}    Get Element Attribute    Content@data-reactid
    ${check}    Get Element Attribute    //div[@data-reactid='${rid}.0.1.4.0.0']@class
    Should Be Equal    ${check}    blanko
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Check Background
    Assign Id To Element    //div[@class='dialog-overlay']    Content
    ${rid}    Get Element Attribute    Content@data-reactid
    ${check}    Get Element Attribute    //img[@data-reactid='${rid}.0.1.4.0.0']@src
    Should Be Equal    ${check}    ${MainUrl}/dist/assets/img/bg/${bcheck}.png
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Open Board
    Assign Id To Element    //div[@class='minimap']    Board
    ${bid}    Get Element Attribute    Board@data-reactid
    Click Element    //div[@data-reactid='${bid}']
    Wait Until Page Contains Element    //div[@class='board']    timeout=2    error=Board Not Open

Delete Board
    Click Element    //span[@class='fa fa-fw fa-trash']
    Wait Until Page Contains Element    //button[@class='btn-danger']    timeout=2    error=Delete Button Not Found
    Click Button    //button[@class='btn-danger']
    Element Should Not Be Visible    //div[@class='board-preview']    Board Not Deleted

Close Board
    Click Element    //span[@class='fa fa-fw fa-arrow-left']
    Wait Until Page Contains Element    //div[@class='content']    timeout=2    error=Board list Not Found
    Location Should Be    ${BoardUrl}

Create Ticket
    Double Click Element    //div[@class='board']
    Wait Until Page Contains Element    //div[@class="ticket"]    timeout=2    error=Ticket Not Found
    Assign Id To Element    //div[@class='ticket']    ticket
    Drag And Drop By Offset    ticket    100    -200

Edit Ticket
    Double Click Element    ticket
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Ticket Edit Dialog Not Found
    Input Text    xpath=/html/body/div[2]/div/div/section[2]/textarea    Typing somenthing
    Click Button    //button[@class="btn-primary"]

Delete Ticket
    Double Click Element    ticket
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Ticket Edit Dialog Not Found
    Click Button    //button[@class='btn-danger']
    Element Should Not Be Visible    ticket    Ticket Not Deleted

Random Edit Board
    Get Edit Xpath
    Click Element    ${Expath}
    Wait Until Page Contains Element    //div[@class='dialog dialog-edit-board']    timeout=2    error=Board Edit Dialog Not Found
    Input Text    //input[@placeholder='Board Name']    Typing board name
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Element    //button[@data-reactid='${rid}.0.2.0']

Random Set Board Background
    Get Edit Xpath
    Click Element    ${Expath}
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Assign Id To Element    //div[@class='dialog-overlay']    Content
    ${rid}    Get Element Attribute    Content@data-reactid
    Get Random Background
    Select From List By Value    //select[@data-reactid='${rid}.0.1.4.2.0']    ${background}
    Run Keyword If    '${background}'=='NONE'    Empty Background
    Run Keyword Unless    '${background}'=='NONE'    Check Background

Random Open Board
    Get Board Xpath
    Click Element    ${Bxpath}
    Wait Until Page Contains Element    //div[@class='board']    timeout=2    error=Board Not Open

Random Delete Board
    Get Delete Xpath
    Assign Id To Element    ${Dxpath}    Board
    Click Element    ${Dxpath}
    Wait Until Page Contains Element    //div[@class='dialog dialog-remove-board']    timeout=2    error=Board Edit Dialog Not Found
    Click Button    //button[@class='btn-danger']
    Element Should Not Be Visible    Board    Board Not Deleted

Random Create Ticket
    Get X Coordinate
    Get Y Coordinate
    Double Click Element At Coordinates    //div[@class='board']    ${x}    ${y}
    Wait Until Page Contains Element    //div[@class="ticket"]    timeout=2    error=Ticket Not Found

Random Move Ticket
    Get Ticket Xpath
    Get X Move
    Get Y Move
    Drag And Drop By Offset    ${Txpath}    ${xMove}    ${yMove}

Random Delete Ticket
    Get Ticket Xpath
    Assign Id To Element    ${Txpath}    ticket
    Double Click Element    ${Txpath}
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Edit Ticket Dialog Not Found
    Click Button    //button[@class='btn-danger']
    Element Should Not Be Visible    ticket    Ticket Not Deleted

Random Edit Ticket
    Get Ticket Xpath
    Double Click Element    ${Txpath}
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Edit Ticket Dialog Not Found
    Input Text    xpath=/html/body/div[2]/div/div/section[2]/textarea    Typing somenthing
    Click Button    //button[@class='btn-primary']

Click Magnet On
    Assign Id To Element    //div[@class='view view-board']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Element    //span[@class='fa fa-fw fa-magnet']
    Assign Id To Element    //div[@data-reactid='${rid}.3.$2']    magnetID
    ${class}    Get Element Attribute    magnetID@class
    Should Match    ${class}    active control

Click Globe On
    Assign Id To Element    //div[@class='view view-board']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Element Should Not Be Visible    //div[@data-reactid='${rid}.1.0.1']
    Click Element    //span[@class='fa fa-fw fa-globe']
    Assign Id To Element    //div[@data-reactid='${rid}.3.$3']    globeID
    ${class}    Get Element Attribute    magnetID@class
    Should Match    ${class}    active control
    Element Should Be Visible    //div[@data-reactid='${rid}.1.0.1']

Click Magnet Off
    Assign Id To Element    //div[@class='view view-board']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Element    //span[@class='fa fa-fw fa-magnet']
    Assign Id To Element    //div[@data-reactid='${rid}.3.$2']    magnetID
    ${class}    Get Element Attribute    magnetID@class
    Should Match    ${class}    control

Click Globe Off
    Assign Id To Element    //div[@class='view view-board']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Element Should Be Visible    //div[@data-reactid='${rid}.1.0.1']
    Click Element    //span[@class='fa fa-fw fa-globe']
    Assign Id To Element    //div[@data-reactid='${rid}.3.$3']    globeID
    ${class}    Get Element Attribute    magnetID@class
    Should Match    ${class}    control
    Element Should Not Be Visible    //div[@data-reactid='${rid}.1.0.1']

Random Share Board
    Get Edit Xpath    2    5
    Click Element    ${Expath}
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.0.1.3.1']
    ${SharedUrl}    Get Value    //input[@placeholder='Shared URL']
    Should Not Be Equal    ${SharedUrl}    ${EMPTY}
    Set Suite Variable    ${Shared}    ${SharedUrl}
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Random Stop Share Board
    Get Edit Xpath    5    5
    Click Element    ${Expath}
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.0.1.3.1']
    ${SharedUrl}    Get Value    //input[@placeholder='Shared URL']
    Should Be Equal    ${SharedUrl}    ${EMPTY}
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Open Shared Board
    Open Browser    ${Shared}    ${Browser}
    Maximize Browser Window
    Set Selenium Speed    ${DELAY}
    Location Should Be    http://${Shared}
    Wait Until Page Contains Element    //input[@name='username']
    Input Text    //input[@name='username']    TesterTester
    Click Button    //button[@class='btn-primary']
    Wait Until Page Contains Element    //div[@class='board']    timeout=2    error=Board Not Open

Send Feedback
    Click Element    //span[@class='fa fa-fw fa-user']
    Wait Until Page Contains Element    //ul[@class='dropdown']    timeout=2    error=Dropdown List Not Found
    Click Element    //div[@class='user-voice-trigger']
    Select Frame    //iframe[@class='uvw-dialog-iframe uv-popover-iframe']
    Wait Until Element Is Visible    //article[@class='widget large-widget']    timeout=2    error=Widget Not Open
    Element Text Should Be    //h1[@class='pane-title']    Send us a message    error=Write message page not open
    Input Text    //textarea[@class='faux-textbox-textarea']    Typing feedback...
    Click Element    //input[@class='checkbox-input']
    Element Text Should Be    //button[@class='button primary']    Next    error=Next Button Missing
    Click Button    //button[@class='button primary']
    Element Text Should Be    //h1[@class='pane-title mb1']    Additional details    erron=Send message page not open
    Input Text    //input[@placeholder='Email address']    ${ValidUser}
    Get Random Type
    Select From List By Value    //select[@class='selectbox full-width']    ${type}
    Element Text Should Be    //button[@class='button primary']    Send message    error=Send Button Missing
    Click Button    //button[@class='button primary']
    Wait Until Element Is Visible    //div[@class='thank-you-text pt2']    timeout=5    error=Message not send to send
    Wait Until Element Is Visible    //button[@class='button primary icon-button']    timeout=5    error=Message not send
    Click Element    //i[@class='icon close-icon']
    Element Should Not Be Visible    //article[@class='widget large-widget']    error=Widget Not Closed
    Unselect Frame
    Click Element    //span[@class='fa fa-fw fa-user']

Log Out
    Click Element    //span[@class='fa fa-fw fa-user']
    Wait Until Page Contains Element    //ul[@class='dropdown']    timeout=2    error=Dropdown List Not Found
    Assign Id To Element    //ul[@class='dropdown']    Dropdown
    ${did}    Get Element Attribute    Board@data-reactid
    Click Element    //li[@data-reactid='${did}.$3']
    Wait Until Page Contains Element    //div[@class='form']    timeout=2    error=Login Form not found
    Location Should Be    ${LoginUrl}

Input Username
    [Arguments]    ${username}
    Input Text    //input[@type='email']    ${username}

Input User Password
    [Arguments]    ${password}
    Input Password    //input[@type='password']    ${password}

Submit Credentials
    Assign Id To Element    //div[@class='view view-form']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.1.0.2']

Open Browser To Login Page
    Open Browser    ${LoginUrl}    ${Browser}
    Maximize Browser Window
    Set Selenium Speed    ${DELAY}
    Location Should Be    ${LoginUrl}
    Title Should Be    ${LoginTitle}

Go To Login Page
    Go To    ${LoginUrl}
    Location Should Be    ${LoginUrl}

Get Board Xpath
    [Arguments]    ${min}=2    ${max}=6
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Bxpath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[1]/div

Get Edit Xpath
    [Arguments]    ${min}=2    ${max}=6
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Expath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[3]/div[2]/span

Get Delete Xpath
    [Arguments]    ${min}=2    ${max}=6
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Dxpath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[3]/div[1]/span

Get Ticket Xpath
    [Arguments]    ${min}=1    ${max}=5
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Txpath}    xpath=/html/body/div/div/div[1]/div/div[1]/div[${int}]

Get X Move
    [Arguments]    ${min}=-768    ${max}=768
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${xMove}    ${int}

Get Y Move
    [Arguments]    ${min}=-432    ${max}=432
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${yMove}    ${int}

Get Y Coordinate
    [Arguments]    ${min}=-432    ${max}=432
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${y}    ${int}

Get X Coordinate
    [Arguments]    ${min}=-768    ${max}=768
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${x}    ${int}

Get Random Background
    [Arguments]    ${min}=0    ${max}=7
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    ${list}    Create List    NONE    PLAY    SWOT    SCRUM    KANBAN
    ...    KEEP_DROP_TRY    CUSTOMER_JOURNEY_MAP    BUSINESS_MODEL_CANVAS
    ${item}    Get From List    ${list}    ${int}
    Set Test Variable    ${background}    ${item}
    ${list2}    Create List    blank    play    swot    scrum    kanban
    ...    keep_drop_try    customer_journey_map    business_model_canvas
    ${item2}    Get From List    ${list2}    ${int}
    Set Test Variable    ${bcheck}    ${item2}

Get Random Type
    [Arguments]    ${min}=0    ${max}=2
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    ${list}    Create List    Support Request    Bug Report    Other
    ${item}    Get From List    ${list}    ${int}
    Set Test Variable    ${type}    ${item}
